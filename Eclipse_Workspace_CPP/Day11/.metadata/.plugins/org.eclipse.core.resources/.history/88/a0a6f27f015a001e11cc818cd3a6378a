#include<iostream>
using namespace std;
class Complex {
private:
	int real;
	int imag;
public:
	Complex(void) {
		this->real = 0;
		this->imag = 0;
	}
	Complex(int real, int imag) {
		this->real = real;
		this->imag = imag;
	}

	void printRecord(void) {
		cout << "Real Number : " << this->real << endl;
		cout << "Imag Number : " << this->imag << endl;
	}
	Complex operator+(Complex c1, Complex c2) {
		Complex result;
		result.real = c1.real + c2.real;
		result.imag = c1.imag + c2.imag;
		return result;
	}
//	friend Complex operator-(Complex &other);
//	friend Complex operator==(Complex &other);
};


//Complex operator-(Complex c1, Complex c2) {
//	Complex result;
//	result.real = c1.real - c2.real;
//	result.imag = c1.imag - c2.imag;
//	return result;
//}
//Complex operator*(Complex c1, Complex c2) {
//	Complex result;
//	result.real = c1.real * c2.real;
//	result.imag = c1.imag * c2.imag;
//	return result;
//}
//this = c1
//other = c2
//bool operator==(Complex c1, Complex c2) {
//	return c1.real == c2.real && c1.imag == c2.imag;
//}
//bool operator>(Complex c1, Complex c2) {
//	return c1.real > c2.real && c1.imag > c2.imag;
//}

int main(void) {
	Complex c1(10, 20);
	Complex c2(30, 40);
	Complex c3 = c1 + c2; // Complex c3 = operator+(c1,c2);
	c3.printRecord();
	/*c3 = c1 - c2;
	//bool status = c1==c2; //c1.operator==(c2)
	bool geq = c1 > c2; // operator>(c1,c2)
	*/
	return 0;
}

